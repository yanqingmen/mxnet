const char *MXGetLastError();
int MXRandomSeed(int seed);
int MXNotifyShutdown();
int MXNDArrayCreateNone(NDArrayHandle *out);
int MXNDArrayCreate(const mx_uint *shape,mx_uint ndim,int dev_type,int dev_id,int delay_alloc,NDArrayHandle *out);
int MXNDArrayLoadFromRawBytes(const void *buf,size_t size,NDArrayHandle *out);
int MXNDArraySaveRawBytes(NDArrayHandle handle,size_t *out_size,const char **out_buf);
int MXNDArraySyncCopyFromCPU(NDArrayHandle handle,const mx_float *data,size_t size);
int MXNDArraySyncCopyToCPU(NDArrayHandle handle,mx_float *data,size_t size);
int MXNDArrayWaitToRead(NDArrayHandle handle);
int MXNDArrayWaitToWrite(NDArrayHandle handle);
int MXNDArraySave(const char *fname,mx_uint num_args,NDArrayHandle *args,const char **keys);
int MXNDArrayLoad(const char *fname,mx_uint *out_size,NDArrayHandle **out_arr,mx_uint *out_name_size,const char ***out_names);
int MXNDArrayFree(NDArrayHandle handle);
int MXNDArraySlice(NDArrayHandle handle,mx_uint slice_begin,mx_uint slice_end,NDArrayHandle *out);
int MXNDArrayGetShape(NDArrayHandle handle,mx_uint *out_dim,const mx_uint **out_pdata);
int MXNDArrayGetData(NDArrayHandle handle,mx_float **out_pdata);
int MXNDArrayGetContext(NDArrayHandle handle,int *out_dev_type,int *out_dev_id);
int MXListFunctions(mx_uint *out_size,FunctionHandle **out_array);
int MXGetFunction(const char *name,FunctionHandle *out);
int MXFuncGetInfo(FunctionHandle fun,const char **name,const char **description,mx_uint *num_args,const char ***arg_names,const char ***arg_type_infos,const char ***arg_descriptions);
int MXFuncDescribe(FunctionHandle fun,mx_uint *num_use_vars,mx_uint *num_scalars,mx_uint *num_mutate_vars,int *type_mask);
int MXFuncInvoke(FunctionHandle fun,NDArrayHandle *use_vars,mx_float *scalar_args,NDArrayHandle *mutate_vars);
int MXSymbolListAtomicSymbolCreators(mx_uint *out_size,AtomicSymbolCreator **out_array);
int MXSymbolGetAtomicSymbolName(AtomicSymbolCreator creator,const char **out);
int MXSymbolGetAtomicSymbolInfo(AtomicSymbolCreator creator,const char **name,const char **description,mx_uint *num_args,const char ***arg_names,const char ***arg_type_infos,const char ***arg_descriptions,const char **key_var_num_args);
int MXSymbolCreateAtomicSymbol(AtomicSymbolCreator creator,mx_uint num_param,const char **keys,const char **vals,SymbolHandle *out);
int MXSymbolCreateVariable(const char *name,SymbolHandle *out);
int MXSymbolCreateGroup(mx_uint num_symbols,SymbolHandle *symbols,SymbolHandle *out);
int MXSymbolGetOutput(SymbolHandle symbol,mx_uint index,SymbolHandle *out);
int MXSymbolGetInternals(SymbolHandle symbol,SymbolHandle *out);
int MXSymbolCreateFromFile(const char *fname,SymbolHandle *out);
int MXSymbolCreateFromJSON(const char *json,SymbolHandle *out);
int MXSymbolSaveToFile(SymbolHandle symbol,const char *fname);
int MXSymbolSaveToJSON(SymbolHandle symbol,const char **out_json);
int MXSymbolFree(SymbolHandle symbol);
int MXSymbolCopy(SymbolHandle symbol,SymbolHandle *out);
int MXSymbolPrint(SymbolHandle symbol,const char **out_str);
int MXSymbolListArguments(SymbolHandle symbol,mx_uint *out_size,const char ***out_str_array);
int MXSymbolListOutputs(SymbolHandle symbol,mx_uint *out_size,const char ***out_str_array);
int MXSymbolListAuxiliaryStates(SymbolHandle symbol,mx_uint *out_size,const char ***out_str_array);
int MXSymbolCompose(SymbolHandle sym,const char *name,mx_uint num_args,const char **keys,SymbolHandle *args);
int MXSymbolGrad(SymbolHandle sym,mx_uint num_wrt,const char **wrt,SymbolHandle *out);
int MXSymbolInferShape(SymbolHandle sym,mx_uint num_args,const char **keys,const mx_uint *arg_ind_ptr,const mx_uint *arg_shape_data,mx_uint *in_shape_size,const mx_uint **in_shape_ndim,const mx_uint ***in_shape_data,mx_uint *out_shape_size,const mx_uint **out_shape_ndim,const mx_uint ***out_shape_data,mx_uint *aux_shape_size,const mx_uint **aux_shape_ndim,const mx_uint ***aux_shape_data,int *complete);
int MXExecutorPrint(ExecutorHandle handle,const char **out_str);
int MXExecutorForward(ExecutorHandle handle,int is_train);
int MXExecutorBackward(ExecutorHandle handle,mx_uint len,NDArrayHandle *head_grads);
int MXExecutorOutputs(ExecutorHandle handle,mx_uint *out_size,NDArrayHandle **out);
int MXExecutorBind(SymbolHandle symbol_handle,int dev_type,int dev_id,mx_uint len,NDArrayHandle *in_args,NDArrayHandle *arg_grad_store,mx_uint *grad_req_type,mx_uint aux_states_len,NDArrayHandle *aux_states,ExecutorHandle *out);
int MXListDataIters(mx_uint *out_size,DataIterCreator **out_array);
int MXDataIterGetIterInfo(DataIterCreator creator,const char **name,const char **description,mx_uint *num_args,const char ***arg_names,const char ***arg_type_infos,const char ***arg_descriptions);
int MXDataIterCreateIter(DataIterCreator creator,mx_uint num_param,const char **keys,const char **vals,DataIterHandle *out);
int MXDataIterFree(DataIterHandle handle);
int MXDataIterBeforeFirst(DataIterHandle handle);
int MXDataIterNext(DataIterHandle handle,int *out);
int MXDataIterGetLabel(DataIterHandle handle,NDArrayHandle *out);
int MXDataIterGetData(DataIterHandle handle,NDArrayHandle *out);
int MXDataIterGetPadNum(DataIterHandle handle,int *pad);
int MXKVStoreCreate(const char *type,KVStoreHandle *out);
int MXKVStoreFree(KVStoreHandle handle);
int MXKVStoreInit(KVStoreHandle handle,mx_uint num,int *keys,NDArrayHandle *vals);
int MXKVStorePush(KVStoreHandle handle,mx_uint num,int *keys,NDArrayHandle *vals,int priority);
int MXKVStorePull(KVStoreHandle handle,mx_uint num,int *keys,NDArrayHandle *vals,int priority);
int MXKVStoreSetUpdater(KVStoreHandle handle,MXKVStoreUpdater updater);